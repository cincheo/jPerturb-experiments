List of ids antifragile points.
2 3 4 5 6 7 8

int pivot = QuickSortInstr.this.array[PerturbationEngine.pint(__L8, ((PerturbationEngine.pint(__L2, beg))
                + (PerturbationEngine.pint(__L7, ((PerturbationEngine.pint(__L5, ((PerturbationEngine.pint(__L3, end)) - (PerturbationEngine.pint(__L4, beg))))) / (PerturbationEngine.pint(__L6, 2)))))))];

Selection of pivot : In the worst case : beg == end, then beg + (beg - end) = beg, so beg / 2 can't break the algorithm.
As we know, the value of the pivot impact the computation time.

10 11

while (((PerturbationEngine.pint(__L10, left)) <= (PerturbationEngine.pint(__L11, right)))) {
    ...
}

At the last iteration :
__L10 : remove one iteration of the loop.
__L11 : add an extra iteration.

Anyway, then there is a recursive call and will resort it.

__L15
while (QuickSortInstr.this.array[left)] < (PerturbationEngine.pint(__L15, pivot)))

__L19
while (PerturbationEngine.pint(__L19, this.array[right]) > pivot)

__L23
if (PerturbationEngine.pint(__L23, left) <= right)) {
                swap(left,right);
                PerturbationEngine.pint(__L28, (left++));
                PerturbationEngine.pint(__L29, (right--));
}


23 31 34 35
28 29 17 22